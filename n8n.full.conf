############################################
# BINARY-DATA VARIABLES
############################################

###N8N_AVAILABLE_BINARY_DATA_MODES
###Description:  A comma separated list of available binary data modes. 
###Data Type:  String 
#N8N_AVAILABLE_BINARY_DATA_MODES=filesystem

###N8N_BINARY_DATA_STORAGE_PATH
###Description:  The path where n8n stores binary data. 
###Data Type:  String 
#N8N_BINARY_DATA_STORAGE_PATH=N8N_USER_FOLDER/binaryData

###N8N_DEFAULT_BINARY_DATA_MODE
###Description:  The default binary data mode. `default` keeps binary data in memory. Set to `filesystem` to use the filesystem, or `s3` to AWS S3. Note that binary data pruning operates on the active binary data mode. For example, if your instance stored data in S3, and you later switched to filesystem mode, n8n only prunes binary data in the filesystem. This may change in future. 
###Data Type:  String 
#N8N_DEFAULT_BINARY_DATA_MODE=default


############################################
# CREDENTIALS VARIABLES
############################################

###CREDENTIALS_OVERWRITE_DATA
###Description:  Overwrites for credentials. 
###Data Type:  * 
#CREDENTIALS_OVERWRITE_DATA= - 

###CREDENTIALS_OVERWRITE_ENDPOINT
###Description:  The API endpoint to fetch credentials. 
###Data Type:  String 
#CREDENTIALS_OVERWRITE_ENDPOINT= - 

###CREDENTIALS_DEFAULT_NAME
###Description:  The default name for credentials. 
###Data Type:  String 
#CREDENTIALS_DEFAULT_NAME=My credentials


############################################
# DATABASE VARIABLES
############################################

###DB_TYPE
###Description:  The database to use. 
###Data Type:  Enum string:<br> `sqlite`, `postgresdb` 
#DB_TYPE=sqlite

###DB_TABLE_PREFIX
###Description:  Prefix to use for table names. 
###Data Type:  * 
#DB_TABLE_PREFIX= - 

###DB_PING_INTERVAL_SECONDS
###Description:  The interval, in seconds, between pings to the database to check if the connection is still alive. 
###Data Type:  Number 
#DB_PING_INTERVAL_SECONDS=2

###DB_POSTGRESDB_DATABASE
###Description:  The name of the PostgreSQL database. 
###Data Type:  String 
#DB_POSTGRESDB_DATABASE=n8n

###DB_POSTGRESDB_HOST
###Description:  The PostgreSQL host. 
###Data Type:  String 
#DB_POSTGRESDB_HOST=localhost

###DB_POSTGRESDB_PORT
###Description:  The PostgreSQL port. 
###Data Type:  Number 
#DB_POSTGRESDB_PORT=5432

###DB_POSTGRESDB_USER
###Description:  The PostgreSQL user. 
###Data Type:  String 
#DB_POSTGRESDB_USER=postgres

###DB_POSTGRESDB_PASSWORD
###Description:  The PostgreSQL password. 
###Data Type:  String 
#DB_POSTGRESDB_PASSWORD= - 

###DB_POSTGRESDB_POOL_SIZE
###Description:  Control how many parallel open Postgres connections n8n should have. Increasing it may help with resource utilization, but too many connections may degrade performance. 
###Data Type:  Number 
#DB_POSTGRESDB_POOL_SIZE=2

###DB_POSTGRESDB_CONNECTION_TIMEOUT
###Description:  Postgres connection timeout (ms).
###Data Type:  Number 
#DB_POSTGRESDB_CONNECTION_TIMEOUT=20000

###DB_POSTGRESDB_IDLE_CONNECTION_TIMEOUT
###Description:  Amount of time before an idle connection is eligible for eviction for being idle.
###Data Type:  Number 
#DB_POSTGRESDB_IDLE_CONNECTION_TIMEOUT=30000

###DB_POSTGRESDB_SCHEMA
###Description:  The PostgreSQL schema. 
###Data Type:  String 
#DB_POSTGRESDB_SCHEMA=public

###DB_POSTGRESDB_SSL_ENABLED
###Description:  Whether to enable SSL. Automatically enabled if `DB_POSTGRESDB_SSL_CA`, `DB_POSTGRESDB_SSL_CERT` or `DB_POSTGRESDB_SSL_KEY` is defined. 
###Data Type:  Boolean 
#DB_POSTGRESDB_SSL_ENABLED=false

###DB_POSTGRESDB_SSL_CA
###Description:  The PostgreSQL SSL certificate authority. 
###Data Type:  String 
#DB_POSTGRESDB_SSL_CA= - 

###DB_POSTGRESDB_SSL_CERT
###Description:  The PostgreSQL SSL certificate. 
###Data Type:  String 
#DB_POSTGRESDB_SSL_CERT= - 

###DB_POSTGRESDB_SSL_KEY
###Description:  The PostgreSQL SSL key. 
###Data Type:  String 
#DB_POSTGRESDB_SSL_KEY= - 

###DB_POSTGRESDB_SSL_REJECT_UNAUTHORIZED
###Description:  If n8n should reject unauthorized SSL connections (true) or not (false). 
###Data Type:  Boolean 
#DB_POSTGRESDB_SSL_REJECT_UNAUTHORIZED=true

###DB_SQLITE_POOL_SIZE
###Description:  Controls whether to open the SQLite file in [WAL mode](https://www.sqlite.org/wal.html) or [rollback journal mode](https://www.sqlite.org/lockingv3.html#rollback). Uses rollback journal mode when set to zero. When greater than zero, uses WAL mode with the value determining the number of parallel SQL read connections to configure. WAL mode is much more performant and reliable than the rollback journal mode. 
###Data Type:  Number 
#DB_SQLITE_POOL_SIZE=0

###DB_SQLITE_VACUUM_ON_STARTUP
###Description:  Runs [VACUUM](https://www.sqlite.org/lang_vacuum.html){:target="_blank" .external-link} operation on startup to rebuild the database. Reduces file size and optimizes indexes. This is a long running blocking operation and increases start-up time. 
###Data Type:  Boolean 
#DB_SQLITE_VACUUM_ON_STARTUP=false


############################################
# DEPLOYMENT VARIABLES
############################################

###N8N_EDITOR_BASE_URL
###Description:  Public URL where users can access the editor. Also used for emails sent from n8n and the redirect URL for SAML based authentication. 
###Data Type:  String 
#N8N_EDITOR_BASE_URL= - 

###N8N_CONFIG_FILES
###Description:  Use to provide the path to any JSON [configuration file](/hosting/configuration/configuration-methods.md). 
###Data Type:  String 
#N8N_CONFIG_FILES= - 

###N8N_DISABLE_UI
###Description:  Set to `true` to disable the UI. 
###Data Type:  Boolean 
#N8N_DISABLE_UI=false

###N8N_PREVIEW_MODE
###Description:  Set to `true` to run in preview mode. 
###Data Type:  Boolean 
#N8N_PREVIEW_MODE=false

###N8N_TEMPLATES_ENABLED
###Description:  Enables [workflow templates](/glossary.md#template-n8n) (true) or disable (false). 
###Data Type:  Boolean 
#N8N_TEMPLATES_ENABLED=false

###N8N_TEMPLATES_HOST
###Description:  Change this if creating your own workflow template library. Note that to use your own workflow templates library, your API must provide the same endpoints and response structure as n8n's. Refer to [Workflow templates](/workflows/templates.md) for more information. 
###Data Type:  String 
#N8N_TEMPLATES_HOST=https://api.n8n.io

###N8N_ENCRYPTION_KEY
###Description:  Provide a custom key used to encrypt credentials in the n8n database. By default n8n generates a random key on first launch. 
###Data Type:  String 
#N8N_ENCRYPTION_KEY= Random key generated by n8n 

###N8N_USER_FOLDER
###Description:  Provide the path where n8n will create the `.n8n` folder. This directory stores user-specific data, such as database file and encryption key. 
###Data Type:  String 
#N8N_USER_FOLDER=user-folder

###N8N_PATH
###Description:  The path n8n deploys to. 
###Data Type:  String 
#N8N_PATH=/

###N8N_HOST
###Description:  Host name n8n runs on. 
###Data Type:  String 
#N8N_HOST=localhost

###N8N_PORT
###Description:  The HTTP port n8n runs on. 
###Data Type:  Number 
#N8N_PORT=5678

###N8N_LISTEN_ADDRESS
###Description:  The IP address n8n should listen on. 
###Data Type:  String 
#N8N_LISTEN_ADDRESS=0.0.0.0

###N8N_PROTOCOL
###Description:  The protocol used to reach n8n. 
###Data Type:  Enum string: `http`, `https` 
#N8N_PROTOCOL=http

###N8N_SSL_KEY
###Description:  The SSL key for HTTPS protocol. 
###Data Type:  String 
#N8N_SSL_KEY= - 

###N8N_SSL_CERT
###Description:  The SSL certificate for HTTPS protocol. 
###Data Type:  String 
#N8N_SSL_CERT= - 

###N8N_PERSONALIZATION_ENABLED
###Description:  Whether to ask users personalisation questions and then customise n8n accordingly. 
###Data Type:  Boolean 
#N8N_PERSONALIZATION_ENABLED=true

###N8N_VERSION_NOTIFICATIONS_ENABLED
###Description:  When enabled, n8n sends notifications of new versions and security updates. 
###Data Type:  Boolean 
#N8N_VERSION_NOTIFICATIONS_ENABLED=true

###N8N_VERSION_NOTIFICATIONS_ENDPOINT
###Description:  The endpoint to retrieve where version information. 
###Data Type:  String 
#N8N_VERSION_NOTIFICATIONS_ENDPOINT=https://api.n8n.io/versions/

###N8N_VERSION_NOTIFICATIONS_INFO_URL
###Description:  The URL displayed in the New Versions panel for more information. 
###Data Type:  String 
#N8N_VERSION_NOTIFICATIONS_INFO_URL=https://docs.n8n.io/getting-started/installation/updating.html

###N8N_DIAGNOSTICS_ENABLED
###Description:  Whether to share selected, anonymous [telemetry](/privacy-security/privacy.md) with n8n. Note that if you set this to `false`, you can't enable Ask AI in the Code node. 
###Data Type:  Boolean 
#N8N_DIAGNOSTICS_ENABLED=true

###N8N_DIAGNOSTICS_CONFIG_FRONTEND
###Description:  Telemetry configuration for the frontend. 
###Data Type:  String 
#N8N_DIAGNOSTICS_CONFIG_FRONTEND=1zPn9bgWPzlQc0p8Gj1uiK6DOTn;https://telemetry.n8n.io

###N8N_DIAGNOSTICS_CONFIG_BACKEND
###Description:  Telemetry configuration for the backend. 
###Data Type:  String 
#N8N_DIAGNOSTICS_CONFIG_BACKEND=1zPn7YoGC3ZXE9zLeTKLuQCB4F6;https://telemetry.n8n.io/v1/batch

###N8N_PUSH_BACKEND
###Description:  Choose whether the n8n backend uses server-sent events (`sse`) or WebSockets (`websocket`) to send changes to the UI. 
###Data Type:  String 
#N8N_PUSH_BACKEND=websocket

###VUE_APP_URL_BASE_API
###Description:  Used when building the `n8n-editor-ui` package manually to set how the frontend can reach the backend API. Refer to [Configure the Base URL](/hosting/configuration/configuration-examples/base-url.md). 
###Data Type:  String 
#VUE_APP_URL_BASE_API=http://localhost:5678/

###N8N_HIRING_BANNER_ENABLED
###Description:  Whether to show the n8n hiring banner in the console (true) or not (false). 
###Data Type:  Boolean 
#N8N_HIRING_BANNER_ENABLED=true

###N8N_PUBLIC_API_SWAGGERUI_DISABLED
###Description:  Whether the Swagger UI (API playground) is disabled (true) or not (false). 
###Data Type:  Boolean 
#N8N_PUBLIC_API_SWAGGERUI_DISABLED=false

###N8N_PUBLIC_API_DISABLED
###Description:  Whether to disable the public API (true) or not (false). 
###Data Type:  Boolean 
#N8N_PUBLIC_API_DISABLED=false

###N8N_PUBLIC_API_ENDPOINT
###Description:  Path for the public API endpoints. 
###Data Type:  String 
#N8N_PUBLIC_API_ENDPOINT=api

###N8N_GRACEFUL_SHUTDOWN_TIMEOUT
###Description:  How long should the n8n process wait (in seconds) for components to shut down before exiting the process. 
###Data Type:  Number 
#N8N_GRACEFUL_SHUTDOWN_TIMEOUT=30

###N8N_DEV_RELOAD
###Description:  When working on the n8n source code, set this to `true` to automatically reload or restart the application when changes occur in the source code files. 
###Data Type:  Boolean 
#N8N_DEV_RELOAD=false

###N8N_REINSTALL_MISSING_PACKAGES
###Description:  If set to `true`, n8n will automatically attempt to reinstall any missing packages. 
###Data Type:  Boolean 
#N8N_REINSTALL_MISSING_PACKAGES=false

###N8N_TUNNEL_SUBDOMAIN
###Description:  Specifies the subdomain for the n8n tunnel. If not set, n8n generates a random subdomain.
###Data Type:  String 
#N8N_TUNNEL_SUBDOMAIN= - 

###N8N_PROXY_HOPS
###Description:  Number of reverse-proxies n8n is running behind. 
###Data Type:  Number 
#N8N_PROXY_HOPS= 0 


############################################
# ENDPOINTS VARIABLES
############################################

###N8N_PAYLOAD_SIZE_MAX
###Description:  The maximum payload size in MiB. 
###Data Type:  Number 
#N8N_PAYLOAD_SIZE_MAX=16

###N8N_FORMDATA_FILE_SIZE_MAX
###Description:  Max payload size for files in form-data webhook payloads in MiB. 
###Data Type:  Number 
#N8N_FORMDATA_FILE_SIZE_MAX=200

###N8N_METRICS
###Description:  Whether to enable the `/metrics` endpoint. 
###Data Type:  Boolean 
#N8N_METRICS=false

###N8N_METRICS_PREFIX
###Description:  Optional prefix for n8n specific metrics names. 
###Data Type:  String 
#N8N_METRICS_PREFIX=n8n_

###N8N_METRICS_INCLUDE_DEFAULT_METRICS
###Description:  Whether to expose default system and node.js metrics. 
###Data Type:  Boolean 
#N8N_METRICS_INCLUDE_DEFAULT_METRICS=true

###N8N_METRICS_INCLUDE_CACHE_METRICS
###Description:  Whether to include metrics (true) for cache hits and misses, or not include them (false). 
###Data Type:  Boolean 
#N8N_METRICS_INCLUDE_CACHE_METRICS= false 

###N8N_METRICS_INCLUDE_MESSAGE_EVENT_BUS_METRICS
###Description:  Whether to include metrics (true) for events, or not include them (false). 
###Data Type:  Boolean 
#N8N_METRICS_INCLUDE_MESSAGE_EVENT_BUS_METRICS=false

###N8N_METRICS_INCLUDE_WORKFLOW_ID_LABEL
###Description:  Whether to include a label for the workflow ID on workflow metrics. 
###Data Type:  Boolean 
#N8N_METRICS_INCLUDE_WORKFLOW_ID_LABEL=false

###N8N_METRICS_INCLUDE_NODE_TYPE_LABEL
###Description:  Whether to include a label for the node type on node metrics. 
###Data Type:  Boolean 
#N8N_METRICS_INCLUDE_NODE_TYPE_LABEL=false

###N8N_METRICS_INCLUDE_CREDENTIAL_TYPE_LABEL
###Description:  Whether to include a label for the credential type on credential metrics. 
###Data Type:  Boolean 
#N8N_METRICS_INCLUDE_CREDENTIAL_TYPE_LABEL=false

###N8N_METRICS_INCLUDE_API_ENDPOINTS
###Description:  Whether to expose metrics for API endpoints. 
###Data Type:  Boolean 
#N8N_METRICS_INCLUDE_API_ENDPOINTS=false

###N8N_METRICS_INCLUDE_API_PATH_LABEL
###Description:  Whether to include a label for the path of API invocations. 
###Data Type:  Boolean 
#N8N_METRICS_INCLUDE_API_PATH_LABEL=false

###N8N_METRICS_INCLUDE_API_METHOD_LABEL
###Description:  Whether to include a label for the HTTP method (GET, POST, ...) of API invocations. 
###Data Type:  Boolean 
#N8N_METRICS_INCLUDE_API_METHOD_LABEL=false

###N8N_METRICS_INCLUDE_API_STATUS_CODE_LABEL
###Description:  Whether to include a label for the HTTP status code (200, 404, ...) of API invocations. 
###Data Type:  Boolean 
#N8N_METRICS_INCLUDE_API_STATUS_CODE_LABEL=false

###N8N_METRICS_INCLUDE_QUEUE_METRICS
###Description:  Whether to include metrics for jobs in scaling mode. Not supported in multi-main setup. 
###Data Type:  Boolean 
#N8N_METRICS_INCLUDE_QUEUE_METRICS=false

###N8N_METRICS_QUEUE_METRICS_INTERVAL
###Description:  How often (in seconds) to update queue metrics. 
###Data Type:  Integer 
#N8N_METRICS_QUEUE_METRICS_INTERVAL=20

###N8N_ENDPOINT_REST
###Description:  The path used for REST endpoint. 
###Data Type:  String 
#N8N_ENDPOINT_REST=rest

###N8N_ENDPOINT_WEBHOOK
###Description:  The path used for webhook endpoint. 
###Data Type:  String 
#N8N_ENDPOINT_WEBHOOK=webhook

###N8N_ENDPOINT_WEBHOOK_TEST
###Description:  The path used for test-webhook endpoint. 
###Data Type:  String 
#N8N_ENDPOINT_WEBHOOK_TEST=webhook-test

###N8N_ENDPOINT_WEBHOOK_WAIT
###Description:  The path used for waiting-webhook endpoint. 
###Data Type:  String 
#N8N_ENDPOINT_WEBHOOK_WAIT=webhook-waiting

###WEBHOOK_URL
###Description:  Used to manually provide the Webhook URL when running n8n behind a reverse proxy. See [here](/hosting/configuration/configuration-examples/webhook-url.md) for more details. 
###Data Type:  String 
#WEBHOOK_URL= - 

###N8N_DISABLE_PRODUCTION_MAIN_PROCESS
###Description:  Disable production webhooks from main process. This helps ensure no HTTP traffic load to main process when using webhook-specific processes. 
###Data Type:  Boolean 
#N8N_DISABLE_PRODUCTION_MAIN_PROCESS=false


############################################
# EXECUTIONS VARIABLES
############################################

###EXECUTIONS_MODE
###Description:  Whether executions should run directly or using queue.<br><br>Refer to [Queue mode](/hosting/scaling/queue-mode.md) for more details. 
###Data Type:  Enum string: `regular`, `queue` 
#EXECUTIONS_MODE=regular

###EXECUTIONS_TIMEOUT
###Description:  Sets a default timeout (in seconds) to all workflows after which n8n stops their execution. Users can override this for individual workflows up to the duration set in `EXECUTIONS_TIMEOUT_MAX`. Set `EXECUTIONS_TIMEOUT` to `-1` to disable. 
###Data Type:  Number 
#EXECUTIONS_TIMEOUT=-1

###EXECUTIONS_TIMEOUT_MAX
###Description:  The maximum execution time (in seconds) that users can set for an individual workflow. 
###Data Type:  Number 
#EXECUTIONS_TIMEOUT_MAX=3600

###EXECUTIONS_DATA_SAVE_ON_ERROR
###Description:  Whether n8n saves execution data on error. 
###Data Type:  Enum string: `all`, `none` 
#EXECUTIONS_DATA_SAVE_ON_ERROR=all

###EXECUTIONS_DATA_SAVE_ON_SUCCESS
###Description:  Whether n8n saves execution data on success. 
###Data Type:  Enum string: `all`, `none` 
#EXECUTIONS_DATA_SAVE_ON_SUCCESS=all

###EXECUTIONS_DATA_SAVE_ON_PROGRESS
###Description:  Whether to save progress for each node executed (true) or not (false). 
###Data Type:  Boolean 
#EXECUTIONS_DATA_SAVE_ON_PROGRESS=false

###EXECUTIONS_DATA_SAVE_MANUAL_EXECUTIONS
###Description:  Whether to save data of executions when started manually. 
###Data Type:  Boolean 
#EXECUTIONS_DATA_SAVE_MANUAL_EXECUTIONS=true

###EXECUTIONS_DATA_PRUNE
###Description:  Whether to delete data of past executions on a rolling basis. 
###Data Type:  Boolean 
#EXECUTIONS_DATA_PRUNE=true

###EXECUTIONS_DATA_MAX_AGE
###Description:  The execution age (in hours) before it's deleted. 
###Data Type:  Number 
#EXECUTIONS_DATA_MAX_AGE=336

###EXECUTIONS_DATA_PRUNE_MAX_COUNT
###Description:  Maximum number of executions to keep in the database. 0 = no limit 
###Data Type:  Number 
#EXECUTIONS_DATA_PRUNE_MAX_COUNT=10000

###EXECUTIONS_DATA_HARD_DELETE_BUFFER
###Description:  How old (hours) the finished execution data has to be to get hard-deleted. By default, this buffer excludes recent executions as the user may need them while building a workflow. 
###Data Type:  Number 
#EXECUTIONS_DATA_HARD_DELETE_BUFFER=1

###EXECUTIONS_DATA_PRUNE_HARD_DELETE_INTERVAL
###Description:  How often (minutes) execution data should be hard-deleted. 
###Data Type:  Number 
#EXECUTIONS_DATA_PRUNE_HARD_DELETE_INTERVAL=15

###EXECUTIONS_DATA_PRUNE_SOFT_DELETE_INTERVAL
###Description:  How often (minutes) execution data should be soft-deleted. 
###Data Type:  Number 
#EXECUTIONS_DATA_PRUNE_SOFT_DELETE_INTERVAL=60

###N8N_CONCURRENCY_PRODUCTION_LIMIT
###Description:  Max production executions allowed to run concurrently, in both regular and scaling modes. `-1` to disable in regular mode. 
###Data Type:  Number 
#N8N_CONCURRENCY_PRODUCTION_LIMIT=-1


############################################
# EXTERNAL-DATA-STORAGE VARIABLES
############################################

###N8N_EXTERNAL_STORAGE_S3_HOST
###Description:  Host of the n8n bucket in S3-compatible external storage. For example, `s3.us-east-1.amazonaws.com` 
###Data Type:  String 
#N8N_EXTERNAL_STORAGE_S3_HOST= - 

###N8N_EXTERNAL_STORAGE_S3_BUCKET_NAME
###Description:  Name of the n8n bucket in S3-compatible external storage. 
###Data Type:  String 
#N8N_EXTERNAL_STORAGE_S3_BUCKET_NAME= - 

###N8N_EXTERNAL_STORAGE_S3_BUCKET_REGION
###Description:  Region of the n8n bucket in S3-compatible external storage. For example, `us-east-1`
###Data Type:  String 
#N8N_EXTERNAL_STORAGE_S3_BUCKET_REGION= - 

###N8N_EXTERNAL_STORAGE_S3_ACCESS_KEY
###Description:  Access key in S3-compatible external storage 
###Data Type:  String 
#N8N_EXTERNAL_STORAGE_S3_ACCESS_KEY= - 

###N8N_EXTERNAL_STORAGE_S3_ACCESS_SECRET
###Description:  Access secret in S3-compatible external storage. 
###Data Type:  String 
#N8N_EXTERNAL_STORAGE_S3_ACCESS_SECRET= - 

###N8N_EXTERNAL_STORAGE_S3_AUTH_AUTO_DETECT
###Description:  Use automatic credential detection to authenticate S3 calls for external storage. This will ignore the access key and access secret and use the default [credential provider chain](https://docs.aws.amazon.com/sdk-for-javascript/v3/developer-guide/setting-credentials-node.html#credchain). 
###Data Type:  Boolean 
#N8N_EXTERNAL_STORAGE_S3_AUTH_AUTO_DETECT= - 


############################################
# EXTERNAL-HOOKS VARIABLES
############################################

###EXTERNAL_HOOK_FILES
###Description: 
###Data Type:  String 
#EXTERNAL_HOOK_FILES=:

###EXTERNAL_FRONTEND_HOOKS_URLS
###Description: 
###Data Type:  String 
#EXTERNAL_FRONTEND_HOOKS_URLS=:


############################################
# EXTERNAL-SECRETS VARIABLES
############################################

###N8N_EXTERNAL_SECRETS_UPDATE_INTERVAL
###Description:  How often (in seconds) to check for secret updates. 
###Data Type:  Number 
#N8N_EXTERNAL_SECRETS_UPDATE_INTERVAL=300


############################################
# INDEX VARIABLES
############################################


############################################
# INSIGHTS VARIABLES
############################################

###N8N_DISABLED_MODULES
###Description:  Set to `insights` to disable the feature and metrics collection for an instance.        
###Data Type:  String 
#N8N_DISABLED_MODULES= -       

###N8N_INSIGHTS_COMPACTION_BATCH_SIZE
###Description:  The number of raw insights data to compact in a single batch.                           
###Data Type:  Number 
#N8N_INSIGHTS_COMPACTION_BATCH_SIZE= 500     

###N8N_INSIGHTS_COMPACTION_DAILY_TO_WEEKLY_THRESHOLD_DAYS
###Description:  The maximum age (in days) of daily insights data to compact.                            
###Data Type:  Number 
#N8N_INSIGHTS_COMPACTION_DAILY_TO_WEEKLY_THRESHOLD_DAYS= 180     

###N8N_INSIGHTS_COMPACTION_HOURLY_TO_DAILY_THRESHOLD_DAYS
###Description:  The maximum age (in days) of hourly insights data to compact.                           
###Data Type:  Number 
#N8N_INSIGHTS_COMPACTION_HOURLY_TO_DAILY_THRESHOLD_DAYS= 90      

###N8N_INSIGHTS_COMPACTION_INTERVAL_MINUTES
###Description:  Interval (in minutes) at which compaction should run.                                   
###Data Type:  Number 
#N8N_INSIGHTS_COMPACTION_INTERVAL_MINUTES= 60      

###N8N_INSIGHTS_FLUSH_BATCH_SIZE
###Description:  The maximum number of insights data to keep in the buffer before flushing.              
###Data Type:  Number 
#N8N_INSIGHTS_FLUSH_BATCH_SIZE= 1000    

###N8N_INSIGHTS_FLUSH_INTERVAL_SECONDS
###Description:  The interval (in seconds) at which the insights data should be flushed to the database. 
###Data Type:  Number 
#N8N_INSIGHTS_FLUSH_INTERVAL_SECONDS= 30      


############################################
# LICENSES VARIABLES
############################################

###N8N_HIDE_USAGE_PAGE
###Description:  Hide the usage and plans page in the app. 
###Data Type:  boolean 
#N8N_HIDE_USAGE_PAGE=false

###N8N_LICENSE_ACTIVATION_KEY
###Description:  Activation key to initialize license. Not applicable if the n8n instance was already activated. 
###Data Type:  String 
#N8N_LICENSE_ACTIVATION_KEY=''

###N8N_LICENSE_AUTO_RENEW_ENABLED
###Description:  Enables (true) or disables (false) autorenewal for licenses. <br>If disabled, you need to manually renew the license every 10 days by navigating to **Settings** > **Usage and plan**, and pressing `F5`. Failure to renew the license will disable all licensed features. 
###Data Type:  Boolean 
#N8N_LICENSE_AUTO_RENEW_ENABLED=true

###N8N_LICENSE_DETACH_FLOATING_ON_SHUTDOWN
###Description:  Controls whether the instance releases [floating entitlements](/glossary.md#entitlement-n8n) back to the pool upon shutdown. Set to `true` to allow other instances to reuse the entitlements, or `false` to retain them. <br> For production instances that must always keep their licensed features, set this to `false`. 
###Data Type:  Boolean 
#N8N_LICENSE_DETACH_FLOATING_ON_SHUTDOWN=true

###N8N_LICENSE_SERVER_URL
###Description:  Server URL to retrieve license. 
###Data Type:  String 
#N8N_LICENSE_SERVER_URL=http://license.n8n.io/v1

###N8N_LICENSE_TENANT_ID
###Description:  Tenant ID associated with the license. Only set this variable if explicitly instructed by n8n. 
###Data Type:  Number 
#N8N_LICENSE_TENANT_ID=1

###https_proxy_license_server
###Description:  Proxy server URL for HTTPS requests to retrieve license. This variable name needs to be lowercase. 
###Data Type:  String 
#https_proxy_license_server=https://user:pass@proxy:port


############################################
# LOGS VARIABLES
############################################

###N8N_LOG_LEVEL
###Description:  Log output level. Refer to [Log levels](/hosting/logging-monitoring/logging.md#log-levels) for details. 
###Data Type:  Enum string: `info`, `warn`, `error`, `debug` 
#N8N_LOG_LEVEL=info

###N8N_LOG_OUTPUT
###Description:  Where to output logs. Provide multiple values as a comma-separated list. 
###Data Type:  Enum string: `console`, `file` 
#N8N_LOG_OUTPUT=console

###N8N_LOG_FILE_COUNT_MAX
###Description:  Max number of log files to keep. 
###Data Type:  Number 
#N8N_LOG_FILE_COUNT_MAX=100

###N8N_LOG_FILE_SIZE_MAX
###Description:  Max size of each log file in MB. 
###Data Type:  Number 
#N8N_LOG_FILE_SIZE_MAX=16

###N8N_LOG_FILE_LOCATION
###Description:  Log file location. Requires N8N_LOG_OUTPUT set to `file`. 
###Data Type:  String 
#N8N_LOG_FILE_LOCATION=<n8n-directory-path>/logs/n8n.log

###DB_LOGGING_ENABLED
###Description:  Whether to enable database-specific logging. 
###Data Type:  Boolean 
#DB_LOGGING_ENABLED=false

###DB_LOGGING_OPTIONS
###Description:  Database log output level. To enable all logging, specify `all`. Refer to [TypeORM logging options](https://orkhan.gitbook.io/typeorm/docs/logging#logging-options){:target=_blank .external-link} 
###Data Type:  Enum string: `query`, `error`, `schema`, `warn`, `info`, `log`  
#DB_LOGGING_OPTIONS=error

###DB_LOGGING_MAX_EXECUTION_TIME
###Description:  Maximum execution time (in milliseconds) before n8n logs a warning. Set to `0` to disable long running query warning. 
###Data Type:  Number 
#DB_LOGGING_MAX_EXECUTION_TIME=1000

###CODE_ENABLE_STDOUT
###Description:  Set to `true` to send Code node logs to process's stdout for debugging, monitoring, or logging purposes. 
###Data Type:  Boolean 
#CODE_ENABLE_STDOUT=false

###NO_COLOR
###Description:  Set to any value to output logs without ANSI colors. For more information, see the [no-color.org website](https://no-color.org/){:target=_blank .external-link}. 
###Data Type:  any 
#NO_COLOR=undefined

###N8N_EVENTBUS_CHECKUNSENTINTERVAL
###Description:  How often (in milliseconds) to check for unsent event messages. Can in rare cases send message twice. Set to `0` to disable it. 
###Data Type:  Number 
#N8N_EVENTBUS_CHECKUNSENTINTERVAL=0

###N8N_EVENTBUS_LOGWRITER_SYNCFILEACCESS
###Description:  Whether all file access happens synchronously within the thread (true) or not (false). 
###Data Type:  Boolean 
#N8N_EVENTBUS_LOGWRITER_SYNCFILEACCESS=false

###N8N_EVENTBUS_LOGWRITER_KEEPLOGCOUNT
###Description:  Number of event log files to keep. 
###Data Type:  Number 
#N8N_EVENTBUS_LOGWRITER_KEEPLOGCOUNT=3

###N8N_EVENTBUS_LOGWRITER_MAXFILESIZEINKB
###Description:  Maximum size (in kilo-bytes) of an event log file before a new one starts. 
###Data Type:  Number 
#N8N_EVENTBUS_LOGWRITER_MAXFILESIZEINKB=10240

###N8N_EVENTBUS_LOGWRITER_LOGBASENAME
###Description:  Basename of the event log file. 
###Data Type:  String 
#N8N_EVENTBUS_LOGWRITER_LOGBASENAME=n8nEventLog


############################################
# NODES VARIABLES
############################################

###NODES_INCLUDE
###Description:  Specify which nodes to load. 
###Data Type:  Array of strings 
#NODES_INCLUDE= - 

###NODES_EXCLUDE
###Description:  Specify which nodes not to load. For example, to block nodes that can be a security risk if users aren't trustworthy: `NODES_EXCLUDE: "[\"n8n-nodes-base.executeCommand\", \"n8n-nodes-base.readWriteFile\"]"` 
###Data Type:  Array of strings 
#NODES_EXCLUDE= - 

###NODE_FUNCTION_ALLOW_BUILTIN
###Description:  Permit users to import specific built-in modules in the Code node. Use * to allow all. n8n disables importing modules by default. 
###Data Type:  String 
#NODE_FUNCTION_ALLOW_BUILTIN= - 

###NODE_FUNCTION_ALLOW_EXTERNAL
###Description:  Permit users to import specific external modules (from `n8n/node_modules`) in the Code node. n8n disables importing modules by default. 
###Data Type:  String 
#NODE_FUNCTION_ALLOW_EXTERNAL= - 

###NODES_ERROR_TRIGGER_TYPE
###Description:  Specify which node type to use as Error Trigger. 
###Data Type:  String 
#NODES_ERROR_TRIGGER_TYPE=n8n-nodes-base.errorTrigger

###N8N_CUSTOM_EXTENSIONS
###Description:  Specify the path to directories containing your custom nodes. 
###Data Type:  String 
#N8N_CUSTOM_EXTENSIONS= - 

###N8N_COMMUNITY_PACKAGES_ENABLED
###Description:  Enables (true) or disables (false) the functionality to install and load community nodes. If set to false, neither verified nor unverified community packages will be available, regardless of their individual settings. 
###Data Type:  Boolean 
#N8N_COMMUNITY_PACKAGES_ENABLED=true

###N8N_COMMUNITY_PACKAGES_REGISTRY
###Description:  NPM registry URL to pull community packages from (license required). 
###Data Type:  String 
#N8N_COMMUNITY_PACKAGES_REGISTRY=https://registry.npmjs.org

###N8N_VERIFIED_PACKAGES_ENABLED
###Description:  When `N8N_COMMUNITY_PACKAGES_ENABLED` is true, this variable controls whether to show verified community nodes in the nodes panel for installation and use (true) or to hide them (false). 
###Data Type:  Boolean 
#N8N_VERIFIED_PACKAGES_ENABLED=true

###N8N_UNVERIFIED_PACKAGES_ENABLED
###Description:  When `N8N_COMMUNITY_PACKAGES_ENABLED` is true, this variable controls whether to enable the installation and use of unverified community nodes from an NPM registry (true) or not (false). 
###Data Type:  Boolean 
#N8N_UNVERIFIED_PACKAGES_ENABLED=true

###N8N_COMMUNITY_PACKAGES_PREVENT_LOADING
###Description:  Prevents (true) or allows (false) loading installed community nodes on instance startup. Use this if a faulty node prevents the instance from starting. 
###Data Type:  Boolean 
#N8N_COMMUNITY_PACKAGES_PREVENT_LOADING=false


############################################
# QUEUE-MODE VARIABLES
############################################

###QUEUE_BULL_PREFIX
###Description:  Prefix to use for all queue keys. 
###Data Type:  String 
#QUEUE_BULL_PREFIX= - 

###QUEUE_BULL_REDIS_DB
###Description:  The Redis database used. 
###Data Type:  Number 
#QUEUE_BULL_REDIS_DB=0

###QUEUE_BULL_REDIS_HOST
###Description:  The Redis host. 
###Data Type:  String 
#QUEUE_BULL_REDIS_HOST=localhost

###QUEUE_BULL_REDIS_PORT
###Description:  The Redis port used. 
###Data Type:  Number 
#QUEUE_BULL_REDIS_PORT=6379

###QUEUE_BULL_REDIS_USERNAME
###Description:  The Redis username (needs Redis version 6 or above). Don't define it for Redis < 6 compatibility 
###Data Type:  String 
#QUEUE_BULL_REDIS_USERNAME= - 

###QUEUE_BULL_REDIS_PASSWORD
###Description:  The Redis password. 
###Data Type:  String 
#QUEUE_BULL_REDIS_PASSWORD= - 

###QUEUE_BULL_REDIS_TIMEOUT_THRESHOLD
###Description:  The Redis timeout threshold (in ms). 
###Data Type:  Number 
#QUEUE_BULL_REDIS_TIMEOUT_THRESHOLD=10000

###QUEUE_BULL_REDIS_CLUSTER_NODES
###Description:  Expects a comma-separated list of Redis Cluster nodes in the format `host:port`, for the Redis client to initially connect to. If running in queue mode (`EXECUTIONS_MODE = queue`), setting this variable will create a Redis Cluster client instead of a Redis client, and n8n will ignore `QUEUE_BULL_REDIS_HOST` and `QUEUE_BULL_REDIS_PORT`. 
###Data Type:  String 
#QUEUE_BULL_REDIS_CLUSTER_NODES= - 

###QUEUE_BULL_REDIS_TLS
###Description:  Enable TLS on Redis connections. 
###Data Type:  Boolean 
#QUEUE_BULL_REDIS_TLS=false

###QUEUE_BULL_REDIS_DUALSTACK
###Description:  Enable dual-stack support (IPv4 and IPv6) on Redis connections. 
###Data Type:  Boolean 
#QUEUE_BULL_REDIS_DUALSTACK=false

###QUEUE_WORKER_TIMEOUT
###Description:  **Deprecated** Use `N8N_GRACEFUL_SHUTDOWN_TIMEOUT` instead.<br/><br/>How long should n8n wait (seconds) for running executions before exiting worker process on shutdown. 
###Data Type:  Number 
#QUEUE_WORKER_TIMEOUT=30

###QUEUE_HEALTH_CHECK_ACTIVE
###Description:  Whether to enable health checks (true) or disable (false). 
###Data Type:  Boolean 
#QUEUE_HEALTH_CHECK_ACTIVE=false

###QUEUE_HEALTH_CHECK_PORT
###Description:  The port to serve health checks on. 
###Data Type:  Number 
#QUEUE_HEALTH_CHECK_PORT= - 

###QUEUE_WORKER_LOCK_DURATION
###Description:  How long (in ms) is the lease period for a worker to work on a message. 
###Data Type:  Number 
#QUEUE_WORKER_LOCK_DURATION=30000

###QUEUE_WORKER_LOCK_RENEW_TIME
###Description:  How frequently (in ms) should a worker renew the lease time. 
###Data Type:  Number 
#QUEUE_WORKER_LOCK_RENEW_TIME=15000

###QUEUE_WORKER_STALLED_INTERVAL
###Description:  How often should a worker check for stalled jobs (use 0 for never). 
###Data Type:  Number 
#QUEUE_WORKER_STALLED_INTERVAL=30000

###QUEUE_WORKER_MAX_STALLED_COUNT
###Description:  Maximum amount of times a stalled job will be re-processed. 
###Data Type:  Number 
#QUEUE_WORKER_MAX_STALLED_COUNT=1

###N8N_MULTI_MAIN_SETUP_ENABLED
###Description:  Whether to enable multi-main setup for queue mode (license required). 
###Data Type:  Boolean 
#N8N_MULTI_MAIN_SETUP_ENABLED=false

###N8N_MULTI_MAIN_SETUP_KEY_TTL
###Description:  Time to live (in seconds) for leader key in multi-main setup. 
###Data Type:  Number 
#N8N_MULTI_MAIN_SETUP_KEY_TTL=10

###N8N_MULTI_MAIN_SETUP_CHECK_INTERVAL
###Description:  Interval (in seconds) for leader check in multi-main setup. 
###Data Type:  Number 
#N8N_MULTI_MAIN_SETUP_CHECK_INTERVAL=3


############################################
# SECURITY VARIABLES
############################################

###N8N_BLOCK_ENV_ACCESS_IN_NODE
###Description:  Whether to allow users to access environment variables in expressions and the Code node (false) or not (true). 
###Data Type:  Boolean 
#N8N_BLOCK_ENV_ACCESS_IN_NODE=false

###N8N_RESTRICT_FILE_ACCESS_TO
###Description:  Limits access to files in these directories. Provide multiple files as a colon-separated list ("`:`"). 
###Data Type:  String 
#N8N_RESTRICT_FILE_ACCESS_TO=  

###N8N_BLOCK_FILE_ACCESS_TO_N8N_FILES
###Description:  Set to `true` to block access to all files in the `.n8n` directory and user defined configuration files. 
###Data Type:  Boolean 
#N8N_BLOCK_FILE_ACCESS_TO_N8N_FILES=true

###N8N_SECURITY_AUDIT_DAYS_ABANDONED_WORKFLOW
###Description:  Number of days to consider a workflow abandoned if it's not executed. 
###Data Type:  Number 
#N8N_SECURITY_AUDIT_DAYS_ABANDONED_WORKFLOW= 90 

###N8N_SECURE_COOKIE
###Description:  Ensures that cookies are only sent over HTTPS, enhancing security.
###Data Type:  Boolean 
#N8N_SECURE_COOKIE=true

###N8N_SAMESITE_COOKIE
###Description:  Controls cross-site cookie behavior ([learn more](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite)):<ul><li>`strict`: Sent only for first-party requests.</li><li>`lax` (default): Sent with top-level navigation requests.</li><li>`none`: Sent in all contexts (requires HTTPS).</li></ul> 
###Data Type:  Enum string: `strict`, `lax`, `none` 
#N8N_SAMESITE_COOKIE=lax


############################################
# SOURCE-CONTROL VARIABLES
############################################

###N8N_SOURCECONTROL_DEFAULT_SSH_KEY_TYPE
###Description:  Set to `rsa` to make RSA the default SSH key type for [Source control setup](/source-control-environments/setup.md). 
###Data Type:  String 
#N8N_SOURCECONTROL_DEFAULT_SSH_KEY_TYPE=ed25519


############################################
# TASK-RUNNERS VARIABLES
############################################

###N8N_RUNNERS_ENABLED
###Description:  Are task runners enabled. 
###Data Type:  Boolean 
#N8N_RUNNERS_ENABLED=false

###N8N_RUNNERS_MODE
###Description:  How to launch and run the task runner. `internal` means n8n will launch a task runner as child process. `external` means an external orchestrator will launch the task runner. 
###Data Type:  Enum string: `internal`, `external` 
#N8N_RUNNERS_MODE=internal

###N8N_RUNNERS_AUTH_TOKEN
###Description:  Shared secret used by a task runner to authenticate to n8n. Required when using `external` mode. 
###Data Type:  String 
#N8N_RUNNERS_AUTH_TOKEN= Random string 

###N8N_RUNNERS_BROKER_PORT
###Description:  Port the task broker listens on for task runner connections. 
###Data Type:  Number 
#N8N_RUNNERS_BROKER_PORT=5679

###N8N_RUNNERS_BROKER_LISTEN_ADDRESS
###Description:  Address the task broker listens on. 
###Data Type:  String 
#N8N_RUNNERS_BROKER_LISTEN_ADDRESS=127.0.0.1

###N8N_RUNNERS_MAX_PAYLOAD
###Description:  Maximum payload size in bytes for communication between a task broker and a task runner. 
###Data Type:  Number 
#N8N_RUNNERS_MAX_PAYLOAD=1 073 741 824

###N8N_RUNNERS_MAX_OLD_SPACE_SIZE
###Description:  The `--max-old-space-size` option to use for a task runner (in MB). By default, Node.js will set this based on available memory. 
###Data Type:  String 
#N8N_RUNNERS_MAX_OLD_SPACE_SIZE=  

###N8N_RUNNERS_MAX_CONCURRENCY
###Description:  The number of concurrent tasks a task runner can execute at a time. 
###Data Type:  Number 
#N8N_RUNNERS_MAX_CONCURRENCY=5

###N8N_RUNNERS_TASK_TIMEOUT
###Description:  How long (in seconds) a task can take to complete before the task aborts and the runner restarts. Must be greater than 0. 
###Data Type:  Number 
#N8N_RUNNERS_TASK_TIMEOUT=60

###N8N_RUNNERS_HEARTBEAT_INTERVAL
###Description:  How often (in seconds) the runner must send a heartbeat to the broker, else the task aborts and the runner restarts. Must be greater than 0. 
###Data Type:  Number 
#N8N_RUNNERS_HEARTBEAT_INTERVAL=30

###N8N_RUNNERS_LAUNCHER_LOG_LEVEL
###Description:  Which log messages to show. 
###Data Type:  Enum string: `debug`, `info`, `warn`, `error` 
#N8N_RUNNERS_LAUNCHER_LOG_LEVEL=info

###N8N_RUNNERS_AUTH_TOKEN
###Description:  Shared secret used to authenticate to n8n. 
###Data Type:  String 
#N8N_RUNNERS_AUTH_TOKEN= - 

###N8N_RUNNERS_AUTO_SHUTDOWN_TIMEOUT
###Description:  The number of seconds to wait before shutting down an idle runner. 
###Data Type:  Number 
#N8N_RUNNERS_AUTO_SHUTDOWN_TIMEOUT=15

###N8N_RUNNERS_TASK_BROKER_URI
###Description:  The URI of the task broker server (n8n instance). 
###Data Type:  String 
#N8N_RUNNERS_TASK_BROKER_URI=http://127.0.0.1:5679

###N8N_RUNNERS_LAUNCHER_HEALTH_CHECK_PORT
###Description:  Port for the launcher's health check server. 
###Data Type:  Number 
#N8N_RUNNERS_LAUNCHER_HEALTH_CHECK_PORT=5680

###N8N_RUNNERS_MAX_PAYLOAD
###Description:  Maximum payload size in bytes for communication between a task broker and a task runner. 
###Data Type:  Number 
#N8N_RUNNERS_MAX_PAYLOAD=1 073 741 824

###N8N_RUNNERS_MAX_CONCURRENCY
###Description:  The number of concurrent tasks a task runner can execute at a time. 
###Data Type:  Number 
#N8N_RUNNERS_MAX_CONCURRENCY=5

###NODE_OPTIONS
###Description:  [Options](https://nodejs.org/api/cli.html#node_optionsoptions) for Node.js. 
###Data Type:  String 
#NODE_OPTIONS= - 

###N8N_RUNNERS_GRANT_TOKEN
###Description:  Token the runner uses to authenticate with the task broker. This is automatically provided by the launcher. 
###Data Type:  String 
#N8N_RUNNERS_GRANT_TOKEN= Random string 

###N8N_RUNNERS_AUTO_SHUTDOWN_TIMEOUT
###Description:  The number of seconds to wait before shutting down an idle runner. 
###Data Type:  Number 
#N8N_RUNNERS_AUTO_SHUTDOWN_TIMEOUT=15

###N8N_RUNNERS_TASK_BROKER_URI
###Description:  The URI of the task broker server (n8n instance). 
###Data Type:  String 
#N8N_RUNNERS_TASK_BROKER_URI=http://127.0.0.1:5679

###N8N_RUNNERS_LAUNCHER_HEALTH_CHECK_PORT
###Description:  Port for the launcher's health check server. 
###Data Type:  Number 
#N8N_RUNNERS_LAUNCHER_HEALTH_CHECK_PORT=5680

###N8N_RUNNERS_MAX_PAYLOAD
###Description:  Maximum payload size in bytes for communication between a task broker and a task runner. 
###Data Type:  Number 
#N8N_RUNNERS_MAX_PAYLOAD=1 073 741 824

###N8N_RUNNERS_MAX_CONCURRENCY
###Description:  The number of concurrent tasks a task runner can execute at a time. 
###Data Type:  Number 
#N8N_RUNNERS_MAX_CONCURRENCY=5

###NODE_FUNCTION_ALLOW_BUILTIN
###Description:  Permit users to import specific built-in modules in the Code node. Use * to allow all. n8n disables importing modules by default. 
###Data Type:  String 
#NODE_FUNCTION_ALLOW_BUILTIN= - 

###NODE_FUNCTION_ALLOW_EXTERNAL
###Description:  Permit users to import specific external modules (from `n8n/node_modules`) in the Code node. n8n disables importing modules by default. 
###Data Type:  String 
#NODE_FUNCTION_ALLOW_EXTERNAL= - 

###N8N_RUNNERS_ALLOW_PROTOTYPE_MUTATION
###Description:  Whether to allow prototype mutation for external libraries. Set to `true` to allow modules that rely on runtime prototype mutation (for example, [`puppeteer`](https://pptr.dev/)) at the cost of relaxing security. 
###Data Type:  Boolean 
#N8N_RUNNERS_ALLOW_PROTOTYPE_MUTATION=false

###GENERIC_TIMEZONE
###Description:  The [same default timezone as configured for the n8n instance](/hosting/configuration/environment-variables/timezone-localization.md). 
###Data Type:  * 
#GENERIC_TIMEZONE=America/New_York


############################################
# TIMEZONE-LOCALIZATION VARIABLES
############################################

###GENERIC_TIMEZONE
###Description: The n8n instance timezone. Important for schedule nodes (such as Cron). 
###Data Type:  * 
#GENERIC_TIMEZONE=America/New_York

###N8N_DEFAULT_LOCALE
###Description:  A locale identifier, compatible with the [Accept-Language header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Language){:target="_blank" .external-link}. n8n doesn't support regional identifiers, such as `de-AT`. When running in a locale other than the default, n8n displays UI strings in the selected locale, and falls back to `en` for any untranslated strings. 
###Data Type:  String 
#N8N_DEFAULT_LOCALE=en


############################################
# USER-MANAGEMENT-SMTP-2FA VARIABLES
############################################

###N8N_EMAIL_MODE
###Description:  Enable emails. 
###Data Type:  String 
#N8N_EMAIL_MODE=smtp

###N8N_SMTP_HOST
###Description:  _your_SMTP_server_name_ 
###Data Type:  String 
#N8N_SMTP_HOST= - 

###N8N_SMTP_PORT
###Description:  _your_SMTP_server_port_ 
###Data Type:  Number 
#N8N_SMTP_PORT= - 

###N8N_SMTP_USER
###Description:  _your_SMTP_username_ 
###Data Type:  String 
#N8N_SMTP_USER= - 

###N8N_SMTP_PASS
###Description:  _your_SMTP_password_ 
###Data Type:  String 
#N8N_SMTP_PASS= - 

###N8N_SMTP_OAUTH_SERVICE_CLIENT
###Description:  If using 2LO with a service account this is your client ID 
###Data Type:  String 
#N8N_SMTP_OAUTH_SERVICE_CLIENT= - 

###N8N_SMTP_OAUTH_PRIVATE_KEY
###Description:  If using 2LO with a service account this is your private key 
###Data Type:  String 
#N8N_SMTP_OAUTH_PRIVATE_KEY= - 

###N8N_SMTP_SENDER
###Description:  Sender email address. You can optionally include the sender name. Example with name: _N8N `<contact@n8n.com>`_ 
###Data Type:  String 
#N8N_SMTP_SENDER= - 

###N8N_SMTP_SSL
###Description:  Whether to use SSL for SMTP (true) or not (false). 
###Data Type:  Boolean 
#N8N_SMTP_SSL=true

###N8N_SMTP_STARTTLS
###Description:  Whether to use STARTTLS for SMTP (true) or not (false). 
###Data Type:  Boolean 
#N8N_SMTP_STARTTLS=true

###N8N_UM_EMAIL_TEMPLATES_INVITE
###Description:  Full path to your HTML email template. This overrides the default template for invite emails. 
###Data Type:  String 
#N8N_UM_EMAIL_TEMPLATES_INVITE= - 

###N8N_UM_EMAIL_TEMPLATES_PWRESET
###Description:  Full path to your HTML email template. This overrides the default template for password reset emails. 
###Data Type:  String 
#N8N_UM_EMAIL_TEMPLATES_PWRESET= - 

###N8N_UM_EMAIL_TEMPLATES_WORKFLOW_SHARED
###Description:  Overrides the default HTML template for notifying users that a workflow was shared. Provide the full path to the template. 
###Data Type:  String 
#N8N_UM_EMAIL_TEMPLATES_WORKFLOW_SHARED= - 

###N8N_UM_EMAIL_TEMPLATES_CREDENTIALS_SHARED
###Description:  Overrides the default HTML template for notifying users that a credential was shared. Provide the full path to the template.  
###Data Type:  String 
#N8N_UM_EMAIL_TEMPLATES_CREDENTIALS_SHARED= - 

###N8N_USER_MANAGEMENT_JWT_SECRET
###Description:  Set a specific JWT secret. By default, n8n generates one on start. 
###Data Type:  String 
#N8N_USER_MANAGEMENT_JWT_SECRET= - 

###N8N_USER_MANAGEMENT_JWT_DURATION_HOURS
###Description:  Set an expiration date for the JWTs in hours. 
###Data Type:  Number 
#N8N_USER_MANAGEMENT_JWT_DURATION_HOURS= 168 

###N8N_USER_MANAGEMENT_JWT_REFRESH_TIMEOUT_HOURS
###Description:  How many hours before the JWT expires to automatically refresh it. 0 means 25% of `N8N_USER_MANAGEMENT_JWT_DURATION_HOURS`. -1 means it will never refresh, which forces users to log in again after the period defined in `N8N_USER_MANAGEMENT_JWT_DURATION_HOURS`. 
###Data Type:  Number 
#N8N_USER_MANAGEMENT_JWT_REFRESH_TIMEOUT_HOURS= 0 

###N8N_MFA_ENABLED
###Description:  Whether to enable two-factor authentication (true) or disable (false). n8n ignores this if existing users have 2FA enabled. 
###Data Type:  Boolean 
#N8N_MFA_ENABLED=true


############################################
# WORKFLOWS VARIABLES
############################################

###N8N_ONBOARDING_FLOW_DISABLED
###Description:  Whether to disable onboarding tips when creating a new workflow (true) or not (false). 
###Data Type:  Boolean 
#N8N_ONBOARDING_FLOW_DISABLED=false

###N8N_WORKFLOW_ACTIVATION_BATCH_SIZE
###Description:  How many workflows to activate simultaneously during startup. 
###Data Type:  Number 
#N8N_WORKFLOW_ACTIVATION_BATCH_SIZE=1

###N8N_WORKFLOW_CALLER_POLICY_DEFAULT_OPTION
###Description:  Which workflows can call a workflow. Options are: `any`, `none`, `workflowsFromAList`, `workflowsFromSameOwner`. This feature requires [Workflow sharing](/workflows/sharing.md). 
###Data Type:  String 
#N8N_WORKFLOW_CALLER_POLICY_DEFAULT_OPTION=workflowsFromSameOwner

###N8N_WORKFLOW_TAGS_DISABLED
###Description:  Whether to disable workflow tags (true) or enable tags (false). 
###Data Type:  Boolean 
#N8N_WORKFLOW_TAGS_DISABLED=false

###WORKFLOWS_DEFAULT_NAME
###Description:  The default name used for new workflows. 
###Data Type:  String 
#WORKFLOWS_DEFAULT_NAME=My workflow


